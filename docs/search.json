[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Stats With Clojure",
    "section": "",
    "text": "0.1 Preface\nClojure is an excellent programming language which scales well. That is you can write small programs, in most languages it’s maintainable, but when it comes to humongous code, most languages fail. Clojure on the other hands excels in this area, it scales well.\nData Science projects start as many small programs and projects, and finally you need to stitch them, and the code grows. Clojure is excellent when it comes to dealing with scale. We feel Clojure is an excellent choice for Data Scientists, and in this book we will show you how.\nThis book adopts two approaches. First it helps you learn statistics from scratch, writing code to create statics library with your own hands. Then it introduces you to the ways of Clojure Data Science professional way of doing stats.\nWe believe in its final form, this book will be an asset both to people who know Clojure and want to learn statistics to venture into the world of Data Science, and we also feel that this book will a great reference material for Data Science professionals who code in Clojure.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Preface</span>"
    ]
  },
  {
    "objectID": "index.html#chapters",
    "href": "index.html#chapters",
    "title": "Stats With Clojure",
    "section": "0.2 Chapters",
    "text": "0.2 Chapters\n\nAbout This Book\nGetting This Book\nSetting Things Up\nSampling\nFast Math\nBasic Statistics\nVisualization\nCharts\nAnalysis of roll of dice\nTabular Data\nWeb Scraping\nBibliography\n\n\nsource: notebooks/index.clj",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Preface</span>"
    ]
  },
  {
    "objectID": "stats_with_clojure.about_this_book.html",
    "href": "stats_with_clojure.about_this_book.html",
    "title": "2  About This Book",
    "section": "",
    "text": "source: notebooks/stats_with_clojure/about_this_book.clj",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>About This Book</span>"
    ]
  },
  {
    "objectID": "stats_with_clojure.getting_this_book.html",
    "href": "stats_with_clojure.getting_this_book.html",
    "title": "3  Getting This Book",
    "section": "",
    "text": "you can read this book on https://scicloj.github.io/stats-with-clojure/.\n\nsource: notebooks/stats_with_clojure/getting_this_book.clj",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Getting This Book</span>"
    ]
  },
  {
    "objectID": "stats_with_clojure.setting_things_up.html",
    "href": "stats_with_clojure.setting_things_up.html",
    "title": "4  Setting Things Up",
    "section": "",
    "text": "4.1 Clojure\nYou need to have Clojure installed to work with this book. If you don’t know Clojure, there ae some resources like https://clojure.org/guides/learn/syntax, there are some Clojure books you could read https://clojure.org/community/books. You can get help from Clojure Slack or from Clojure Zulip https://clojurians.zulipchat.com.",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Setting Things Up</span>"
    ]
  },
  {
    "objectID": "stats_with_clojure.setting_things_up.html#ide",
    "href": "stats_with_clojure.setting_things_up.html#ide",
    "title": "4  Setting Things Up",
    "section": "4.2 IDE",
    "text": "4.2 IDE\nYou need to have a good IDE for CLojure. Emacs https://www.gnu.org/software/emacs/ is good, and you have an extension called Cider https://cider.mx/ that helps you to work with Clojure.\nIf you are okay about getting tracked VSCode https://code.visualstudio.com/, along with Calva https://calva.io/ can be used. One could also use VSCodium https://vscodium.com/ in case you do not want the evils of Microsoft on your machine, Calva works perfectly well with VSCodium.",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Setting Things Up</span>"
    ]
  },
  {
    "objectID": "stats_with_clojure.setting_things_up.html#git",
    "href": "stats_with_clojure.setting_things_up.html#git",
    "title": "4  Setting Things Up",
    "section": "4.3 Git",
    "text": "4.3 Git\nMake sure you know git, and have it installed on your system. You can learn about it here https://www.git-scm.com/.",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Setting Things Up</span>"
    ]
  },
  {
    "objectID": "stats_with_clojure.setting_things_up.html#clone-the-project",
    "href": "stats_with_clojure.setting_things_up.html#clone-the-project",
    "title": "4  Setting Things Up",
    "section": "4.4 Clone the project",
    "text": "4.4 Clone the project\nYou can clone the entire project from github https://github.com/scicloj/stats-with-clojure. you may use:\n$ git clone git@github.com:scicloj/stats-with-clojure.git\nOr\n$ git clone https://github.com/scicloj/stats-with-clojure.git",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Setting Things Up</span>"
    ]
  },
  {
    "objectID": "stats_with_clojure.setting_things_up.html#run-the-project",
    "href": "stats_with_clojure.setting_things_up.html#run-the-project",
    "title": "4  Setting Things Up",
    "section": "4.5 Run the project",
    "text": "4.5 Run the project\nOnce cloned, navigate to stats-with-clojure folder:q\n$ cd stats-with-clojure\nThen in the folder jack in with deps.edn.\nIf all the packages needed couldn’t be installed trying:\n$ clj -P -Sthreads 1\nin terminal. Then try to jackin with deps.edn again.",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Setting Things Up</span>"
    ]
  },
  {
    "objectID": "stats_with_clojure.setting_things_up.html#running-this-book",
    "href": "stats_with_clojure.setting_things_up.html#running-this-book",
    "title": "4  Setting Things Up",
    "section": "4.6 Running this book",
    "text": "4.6 Running this book\nHave REPl running\ncustom REPL commands\n\nquarto\n\ncode and HTML side by side\n\nREPL\n\n\nsource: notebooks/stats_with_clojure/setting_things_up.clj",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Setting Things Up</span>"
    ]
  },
  {
    "objectID": "stats_with_clojure.sampling.html",
    "href": "stats_with_clojure.sampling.html",
    "title": "5  Sampling",
    "section": "",
    "text": "Let’s say you want to predict elections result of a local leader in a village. The village contains 6000+ families, and you are on limited budget of time and money. You can’t ask all the people their political preferences, instead what you do is to sample, select few of them, ask them what is their political preference, who they might vote, and why. Then you generalize it. This is called sampling.\nA lot could go wrong when you sample. You don’t go about and ask kids who they think will become the leader of the village, they don’t vote, their reasoning might not be as sound as a grown up. Let’s say that the village has 10 wealthy, 1000 middle class, 5000 poor families, what ratio you will pick to sample the population? You may pick 10 middle class and 50 poor families for your survey.\nWhat the statistics of previous voting patterns show? Say all members 10 wealthy families have voted in previous elections, only 150 middle class families have voted in previous elections on an average, and on an average only 3500 poor families have voted in previous elections, now what sampling ratio you are thinking about?\nChoosing the right sample can make your break your statistical quest. When ever you make prediction by sampling, you must also say what is the margin of error that could be for your predictions to vary.\n\nsource: notebooks/stats_with_clojure/sampling.clj",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Sampling</span>"
    ]
  },
  {
    "objectID": "stats_with_clojure.fast_math.html",
    "href": "stats_with_clojure.fast_math.html",
    "title": "6  Fast Math",
    "section": "",
    "text": "6.1 What is Fast Math?\nhttps://github.com/generateme/fastmath\nwhy use it?\nspeed\ntested libraries\nconstants\ntrig functions",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Fast Math</span>"
    ]
  },
  {
    "objectID": "stats_with_clojure.fast_math.html#what-is-fast-math",
    "href": "stats_with_clojure.fast_math.html#what-is-fast-math",
    "title": "6  Fast Math",
    "section": "",
    "text": "(fc/abs -1)\n\n\n1.0\n\n\n(fc/sqrt 9)\n\n\n3.0\n\n\n(fc/sin 0.5)\n\n\n0.47942553860420295\n\n\n(fc/sin (/ fc/PI 2))\n\n\n1.0\n\n\n(fc/exp 1)\n\n\n2.7182818284590455\n\n\n(fc/exp 5)\n\n\n148.4131591025766\n\n\n(fc/log 10)\n\n\n2.302585092994046\n\n\n(fc/log fc/E)\n\n\n1.0\n\n\nsource: notebooks/stats_with_clojure/fast_math.clj",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Fast Math</span>"
    ]
  },
  {
    "objectID": "stats_with_clojure.basic_statistics.html",
    "href": "stats_with_clojure.basic_statistics.html",
    "title": "7  Basic Statistics",
    "section": "",
    "text": "7.1 Total\n\\[\ntotal = \\sum_{i=1}^n x_i\n\\]",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Basic Statistics</span>"
    ]
  },
  {
    "objectID": "stats_with_clojure.basic_statistics.html#total",
    "href": "stats_with_clojure.basic_statistics.html#total",
    "title": "7  Basic Statistics",
    "section": "",
    "text": "(def marks [70 80 60 90])\n\n\n(apply + marks)\n\n\n300\n\n\n(defn total [vector]\n  (apply + vector))\n\n\n(total marks)\n\n\n300",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Basic Statistics</span>"
    ]
  },
  {
    "objectID": "stats_with_clojure.basic_statistics.html#mean",
    "href": "stats_with_clojure.basic_statistics.html#mean",
    "title": "7  Basic Statistics",
    "section": "7.2 Mean",
    "text": "7.2 Mean\n\\[\nmean = \\frac{total}{n}\n\\]\n\\[\nmean = \\frac{1}{n} \\sum_{i=1}^n x_i\n\\]\n\n(defn mean [vector]\n  (/ (total vector) (count vector)))\n\n\n(mean marks)\n\n\n75",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Basic Statistics</span>"
    ]
  },
  {
    "objectID": "stats_with_clojure.basic_statistics.html#median",
    "href": "stats_with_clojure.basic_statistics.html#median",
    "title": "7  Basic Statistics",
    "section": "7.3 Median",
    "text": "7.3 Median\n\n(defn median_odd [vector]\n  (nth vector (/ (count vector) 2)))\n\n\n(median_odd marks)\n\n\n60\n\n\n(defn median_even [vector]\n  (let [middle-idx (/ (count vector) 2)]\n    (/ (+ (nth vector middle-idx) (nth vector (dec middle-idx))) 2)))\n\n\n(median_even marks)\n\n\n70\n\n\n(defn median [vector]\n  (if (even? (count vector))\n    (median_even vector)\n    (median_odd vector)))\n\n\n(median marks)\n\n\n70",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Basic Statistics</span>"
    ]
  },
  {
    "objectID": "stats_with_clojure.basic_statistics.html#mode",
    "href": "stats_with_clojure.basic_statistics.html#mode",
    "title": "7  Basic Statistics",
    "section": "7.4 Mode",
    "text": "7.4 Mode\n\n(defn mode [vector]\n  (-&gt;&gt; vector\n       frequencies\n       (sort-by second &gt;)\n       first\n       first))\n\n\n(mode marks)\n\n\n70",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Basic Statistics</span>"
    ]
  },
  {
    "objectID": "stats_with_clojure.basic_statistics.html#range",
    "href": "stats_with_clojure.basic_statistics.html#range",
    "title": "7  Basic Statistics",
    "section": "7.5 Range",
    "text": "7.5 Range\n\n(defn stats-range [vector]\n  (- (apply max vector) (apply min vector)))\n\n\n(stats-range marks)\n\n\n30",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Basic Statistics</span>"
    ]
  },
  {
    "objectID": "stats_with_clojure.basic_statistics.html#percentiles",
    "href": "stats_with_clojure.basic_statistics.html#percentiles",
    "title": "7  Basic Statistics",
    "section": "7.6 Percentiles",
    "text": "7.6 Percentiles\n\n(defn percentile [vector percentile]\n  (let [sorted-vector (sort vector)\n        idx (int (* percentile (/ (count sorted-vector) 100)))]\n    (nth sorted-vector idx)))\n\n\n(percentile marks 60)\n\n\n80\n\n\n(percentile marks 90)\n\n\n90",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Basic Statistics</span>"
    ]
  },
  {
    "objectID": "stats_with_clojure.basic_statistics.html#quartiles",
    "href": "stats_with_clojure.basic_statistics.html#quartiles",
    "title": "7  Basic Statistics",
    "section": "7.7 Quartiles",
    "text": "7.7 Quartiles\n\n(def one-to-forty (range 1 41))\n\n\n(defn first-quartile [vector]\n  (percentile vector 25))\n\n\n(first-quartile one-to-forty)\n\n\n11\n\n\n(defn second-quartile [vector]\n  (percentile vector 50))\n\n\n(second-quartile one-to-forty)\n\n\n21\n\n\n(defn third-quartile [vector]\n  (percentile vector 75))\n\n\n(third-quartile one-to-forty)\n\n\n31\n\n\n(defn quartiles [vector]\n  [(first-quartile vector) (second-quartile vector) (third-quartile vector)])\n\n\n(quartiles one-to-forty)\n\n\n[11 21 31]",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Basic Statistics</span>"
    ]
  },
  {
    "objectID": "stats_with_clojure.basic_statistics.html#interquartile-range",
    "href": "stats_with_clojure.basic_statistics.html#interquartile-range",
    "title": "7  Basic Statistics",
    "section": "7.8 Interquartile Range",
    "text": "7.8 Interquartile Range\n\n(defn interquartile-range [vector]\n  (- (third-quartile vector) (first-quartile vector)))\n\n\n(interquartile-range one-to-forty)\n\n\n20",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Basic Statistics</span>"
    ]
  },
  {
    "objectID": "stats_with_clojure.basic_statistics.html#variance",
    "href": "stats_with_clojure.basic_statistics.html#variance",
    "title": "7  Basic Statistics",
    "section": "7.9 Variance",
    "text": "7.9 Variance\n\n(defn variance [vector]\n  (let [m (mean vector)]\n    (apply + (map #(* % %) (map #(- % m) vector)))))\n\n\n(variance marks)\n\n\n500",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Basic Statistics</span>"
    ]
  },
  {
    "objectID": "stats_with_clojure.basic_statistics.html#standard-deviation",
    "href": "stats_with_clojure.basic_statistics.html#standard-deviation",
    "title": "7  Basic Statistics",
    "section": "7.10 Standard Deviation",
    "text": "7.10 Standard Deviation\n\n(defn standard-deviation [vector]\n  (Math/sqrt (variance vector)))\n\n\n(standard-deviation marks)\n\n\n22.360679774997898",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Basic Statistics</span>"
    ]
  },
  {
    "objectID": "stats_with_clojure.basic_statistics.html#covariance",
    "href": "stats_with_clojure.basic_statistics.html#covariance",
    "title": "7  Basic Statistics",
    "section": "7.11 Covariance",
    "text": "7.11 Covariance",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Basic Statistics</span>"
    ]
  },
  {
    "objectID": "stats_with_clojure.basic_statistics.html#correlation",
    "href": "stats_with_clojure.basic_statistics.html#correlation",
    "title": "7  Basic Statistics",
    "section": "7.12 Correlation",
    "text": "7.12 Correlation\n\nsource: notebooks/stats_with_clojure/basic_statistics.clj",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Basic Statistics</span>"
    ]
  },
  {
    "objectID": "stats_with_clojure.visualization.html",
    "href": "stats_with_clojure.visualization.html",
    "title": "8  Visualization",
    "section": "",
    "text": "8.1 A Word About Visualization\nHumans are not good with numbers. Look at a spreadsheet full of numbers, and you can’t make any sense, but if the spreadsheet includes graphs ,am ay be you can. Numbers came into existence may be few thousand years ago when humans developed commerce. We genetically aren’t used to it. Life developed vision while insects were around, millions of years ago, so our brain carries all the packages to process vision instantly.\nLot of statistics is about creating graphs, or visualizing data so that we humans can understand it more intuitively than looking at a bunch of numbers. In this chapter you will see how three visualizations helped humans to understand what’s going on without pouring into stream of numbers.",
    "crumbs": [
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Visualization</span>"
    ]
  },
  {
    "objectID": "stats_with_clojure.visualization.html#london-cholera-outbreak",
    "href": "stats_with_clojure.visualization.html#london-cholera-outbreak",
    "title": "8  Visualization",
    "section": "8.2 London Cholera Outbreak",
    "text": "8.2 London Cholera Outbreak\nhttps://en.wikipedia.org/wiki/1854_Broad_Street_cholera_outbreak\nIt was 1854, and London had a cholera outbreak. None knew how one contracted cholera, and it was thought smelling foul things made you sick. The death tolls were rising and something must be done about it.\nA person named John Snow, pictured below, used visualization techniques to find the source of this disease.\n\nTake look at the map below:\n\nIf you zoom in, you can see some black bars. Each bar is a dead person due to cholera.\n\nIf you see the picture above, you can notice that around a certain pump, there are more deaths. John Snow inferred that Cholera spreads due to contaminated water, and this particular pump was very much contaminated.\n\nTo prevent the spread of this disease, he removed the handle of this pump, and cholera deaths decreased. Till this day, the pump whose handle bar is removed stands in London. There is bar nearby that bears the name of John Show.",
    "crumbs": [
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Visualization</span>"
    ]
  },
  {
    "objectID": "stats_with_clojure.visualization.html#napoleons-invasion-of-russia",
    "href": "stats_with_clojure.visualization.html#napoleons-invasion-of-russia",
    "title": "8  Visualization",
    "section": "8.3 Napoleons Invasion of Russia",
    "text": "8.3 Napoleons Invasion of Russia\nhttps://en.wikipedia.org/wiki/French_invasion_of_Russia\nNapoleon’s invasion of Russia is a disastrous one. Russians did not really fight Nepoleon, they were smart, they let him reach Moscow and Moscow was deserted. Napoleon waited in Moscow for word of surrender and nothing happened. Napoleon realized that he had been trapped and had to return to France before the onset of winter.\n\nHis troops weren’t prepared for winter, and while traveling back many died. The picture above is a great postmortem visualization of his troop numbers. It shows roughly the path the troops tool from France to Moscow. The path is shown in brown, the width of the path is proportional to the strength of the troops. The path traced in black are the path back from Russia to France. You can see how the black path is narrow, representing the reduced troop numbers.\nWhile returning, a lot of troops died in the cold, so the return path in black is traced below the march forward path in brown, and below the return path, you could see the corresponding winter temperatures. You could see while the troops were returning how the temperature dwindled and how the width of the kine shrinks because of it.\nThis is a genius visualization which gives you lot of information about the troop size, position, the direction they traveled and how the weather affected them. Though we have computers today, I am not sure if we could produce such a good maps with mapping API’s we have.",
    "crumbs": [
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Visualization</span>"
    ]
  },
  {
    "objectID": "stats_with_clojure.visualization.html#florence-nightingale",
    "href": "stats_with_clojure.visualization.html#florence-nightingale",
    "title": "8  Visualization",
    "section": "8.4 Florence Nightingale",
    "text": "8.4 Florence Nightingale\nhttps://en.wikipedia.org/wiki/Florence_Nightingale\nFlorence Nightingale worked for the British Army in the Crimea war. This was the chart she produced which illustrated the cause if death of fighting soldiers.\n\nIf you see the above picture, the blue ares in the pie chart dominates. They represent soldiers not dying in war, but they are the count of soldiers who died due to preventable diseases.\nThe ares of the red wedges represents the deaths from wounds, and black wedges are from other causes.\nIt’s shocking that when a person goes to war, he may not die fighting, but he may die falling prey to disease.\nFlorence Nightingale’s illustrations, made the people higher up understand the gravity of the situation, and one can safely say she played some part in promoting hygiene and health in medical practices we follow today which has saved numerous lives.\nThe point here is the people who we accuse of not understanding the toil of commoners, might understand the gravity of the problem, if the data is presented in a right way.",
    "crumbs": [
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Visualization</span>"
    ]
  },
  {
    "objectID": "stats_with_clojure.visualization.html#hans-roslings-analysis-of-countries-gdp",
    "href": "stats_with_clojure.visualization.html#hans-roslings-analysis-of-countries-gdp",
    "title": "8  Visualization",
    "section": "8.5 Hans Rosling’s analysis of countries GDP",
    "text": "8.5 Hans Rosling’s analysis of countries GDP\nhttps://www.youtube.com/watch?v=jbkSRLYSojo\n\nsource: notebooks/stats_with_clojure/visualization.clj",
    "crumbs": [
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Visualization</span>"
    ]
  },
  {
    "objectID": "stats_with_clojure.charts.html",
    "href": "stats_with_clojure.charts.html",
    "title": "9  Charts",
    "section": "",
    "text": "9.1 Bar Chart",
    "crumbs": [
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Charts</span>"
    ]
  },
  {
    "objectID": "stats_with_clojure.charts.html#pie-chart",
    "href": "stats_with_clojure.charts.html#pie-chart",
    "title": "9  Charts",
    "section": "9.2 Pie Chart",
    "text": "9.2 Pie Chart",
    "crumbs": [
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Charts</span>"
    ]
  },
  {
    "objectID": "stats_with_clojure.charts.html#line-chart",
    "href": "stats_with_clojure.charts.html#line-chart",
    "title": "9  Charts",
    "section": "9.3 Line Chart",
    "text": "9.3 Line Chart",
    "crumbs": [
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Charts</span>"
    ]
  },
  {
    "objectID": "stats_with_clojure.charts.html#area-chart",
    "href": "stats_with_clojure.charts.html#area-chart",
    "title": "9  Charts",
    "section": "9.4 Area Chart",
    "text": "9.4 Area Chart",
    "crumbs": [
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Charts</span>"
    ]
  },
  {
    "objectID": "stats_with_clojure.charts.html#scatter-plot",
    "href": "stats_with_clojure.charts.html#scatter-plot",
    "title": "9  Charts",
    "section": "9.5 Scatter plot",
    "text": "9.5 Scatter plot",
    "crumbs": [
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Charts</span>"
    ]
  },
  {
    "objectID": "stats_with_clojure.charts.html#heatmaps",
    "href": "stats_with_clojure.charts.html#heatmaps",
    "title": "9  Charts",
    "section": "9.6 Heatmaps",
    "text": "9.6 Heatmaps\n\nsource: notebooks/stats_with_clojure/charts.clj",
    "crumbs": [
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Charts</span>"
    ]
  },
  {
    "objectID": "stats_with_clojure.dice.html",
    "href": "stats_with_clojure.dice.html",
    "title": "10  Analysis of roll of dice",
    "section": "",
    "text": "10.1 Plotting\nTBD",
    "crumbs": [
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Analysis of roll of dice</span>"
    ]
  },
  {
    "objectID": "stats_with_clojure.dice.html#plotting",
    "href": "stats_with_clojure.dice.html#plotting",
    "title": "10  Analysis of roll of dice",
    "section": "",
    "text": "source: notebooks/stats_with_clojure/dice.clj",
    "crumbs": [
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Analysis of roll of dice</span>"
    ]
  },
  {
    "objectID": "stats_with_clojure.tabular_data.html",
    "href": "stats_with_clojure.tabular_data.html",
    "title": "11  Tabular Data",
    "section": "",
    "text": "11.1 Table Cloth",
    "crumbs": [
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>Tabular Data</span>"
    ]
  },
  {
    "objectID": "stats_with_clojure.tabular_data.html#table-cloth",
    "href": "stats_with_clojure.tabular_data.html#table-cloth",
    "title": "11  Tabular Data",
    "section": "",
    "text": "source: notebooks/stats_with_clojure/tabular_data.clj",
    "crumbs": [
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>Tabular Data</span>"
    ]
  },
  {
    "objectID": "stats_with_clojure.web_scraping.html",
    "href": "stats_with_clojure.web_scraping.html",
    "title": "12  Web Scraping",
    "section": "",
    "text": "source: notebooks/stats_with_clojure/web_scraping.clj",
    "crumbs": [
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>Web Scraping</span>"
    ]
  },
  {
    "objectID": "stats_with_clojure.bibliography.html",
    "href": "stats_with_clojure.bibliography.html",
    "title": "13  Bibliography",
    "section": "",
    "text": "Think Stats, 2nd Edition\nIntroduction to Probability and Statistics, 14th Edition\nStatistics and probability, Khan Academy\n\n\nsource: notebooks/stats_with_clojure/bibliography.clj",
    "crumbs": [
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>Bibliography</span>"
    ]
  }
]